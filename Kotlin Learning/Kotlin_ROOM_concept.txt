ref : sqlite query syntax (https://www.sqlite.org/lang.html)

      https://developer.android.com/training/data-storage/room/defining-data  [ROOm Defining Data Entity]

Tool to prepare DB for Sqlite :- DB Browser For Sqlite

-------------

* ROOM
  ----
   sqlite like database underneath | Data Persistence

   -> 
      Entity : Table-Row <-> Class Object
               Column    <-> field/property

      Interface :- DAO 


  Annotations :
     ref:- https://developer.android.com/reference/android/arch/persistence/room/package-summary#annotations
     
     1) @Entity(tableName = )

     2) @PrimaryKey(autoGenerate = )

     3) @ColumnInfo(name = )

     4) @Embedded

     5) @TypeConverter
    

 * How Custom Objects are stored in DB ?
 -> converted first to string before storing 
    converted back to object before fetching

    Convert to/from -> ByteArray

    @TypeConverter :- tells then such Type arrives convert it to ByteArray
    
    Converter :- Tell room database how to work with specific type when 
                  storing the data to db       
                  or fetching the data from db 
    fromBitmap() :-
       bitMap.compress(...)
    
    toBitMap() :-
       BitMapFactory.decodeByteArray()


--------------------------

* User Repository :
  --------
   -> A repository class abstracts access to multiple data sources

  View Model :
  ------
   -> role to provide data to UI & survive configuration changes


  Where to find data manually : (to check sqlite database manually )
  ----
   Device File Exlorer (tab) - data - com.example.proj_name - database

   DB Browser for Sqlite

  
  * Custom class attributes embedding in table :
    -----
     `@Embedded` annotation is used for purpose

     Note custom properties such as BitMap will not be embedded using `@Embedded` annotation.
       
  * @TypeConverter :
    ---------
     - Allow us to add custom object into database


-----------------------

* Pre-Populate Room DB

   -> DB Browser for SqLite  (sqlitebrowser.org)

   NOTE :- keep Database schema define in your code same as pre-populated one (i.e prepare from db browser tool)


   Use :-
     Room.databaseBuilder(...)
         .createFromAsset()     //IMP
         .build

   Q): Where to find exported schema generated by ROOM database ???

    -> app/build/schemas/
         \
          -> json file