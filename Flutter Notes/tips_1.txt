* If you want to preserve the child under Expanded then use Align() in between i.Expanded 
   
   Expanded(child:
      Align(
          align: Alignment.BottomCenter,
          child: YourWidget()
      )
    )

* padding vs margin 
  ------------
   When there is no child for container at that time padding value is useless, so need to use margin at that time

* ViewPadding vs ViewInsets :
  ------------
   In Flutter, a Widget, usually a Scaffold , can consume viewPadding, padding or viewInsets 
   and modify the MediaQuery which then is passed down to itâ€™s child.

* barrel file = file of import statements 

* Shrinkwrap & ViewPort :
  -------------
   ViewPort : Space allowed for ListView
   Shrinkwrap :- Forcibly evaluate inner nnested Widgets

* Wrap & Full Screen Size :
  ----
   - by default Wrap widget not takes full screen 
     but you can simply wrapped it with SizedBox with infinity width to do so

* Flexible Widget & LayoutBuilder :
  ------
   - You can use Flexible Widget alongwith LayoutBuilder to display Placeholder or Image accordingly


* absolute & relative import related package :
  -----
   - always_use_package_imports 


* AnimatedListState :
  -----
  -> You can use GlobalKey<AnimatedListState> key,
     to insert or remove item from ListView in animated fashion

  SizeTransiton  // -> kind of animation

* TextOverflow :
  -> You can fix Text Overflow error by wrapping Text() widget under Flexible() widget

* StatefulBuilder :
  -----
  -> If you want to save memory & make your app faster, then you must wrap the portion
     of code with StatefulBuilder() widget which will rebuild only that portion & not all below it !


* Why use Stateless Widgets over Functions ??
  ---
  -> Recommended by Flutter (ie more efficent)
  -> In Stateless widget you will get its own context
     Whereas
     If we implement via Function() then it will use Parent Context

